/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tampilan;

import helper.query;
import helper.reset;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author afgha
 */
public class DataPemilihan extends javax.swing.JFrame {
    private DefaultTableModel tabmode;
    private final Connection conn = new helper.koneksi().getConnection();
    query query = new query();
    reset reset = new reset();
    
    void reset(){
        reset.resetTextFields(this.getContentPane());
    }
    
    void datatable() {
        Object[] baris = {"ID Pemilihan", "Nama Pemilihan"};
        tabmode = new DefaultTableModel(null, baris);
        tabDataPemilihan.setModel(tabmode);
         String sql = "SELECT id_pemilihan, nama_pemilihan FROM pemilihan;";
        try {
            Statement stat = conn.createStatement();
            ResultSet res = stat.executeQuery(sql);
            while (res.next()) {
                String id_pemilihan = res.getString("id_pemilihan");
                String nama_pemilihan = res.getString("nama_pemilihan");

                String[] data = {id_pemilihan,nama_pemilihan};
                tabmode.addRow(data);
            }
        } catch (SQLException ex) {
            System.out.println("Error: " + ex);
        }
        
    }
    /**
     * Creates new form DataPemilikToko
     */
    public DataPemilihan() {
        initComponents();
        datatable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tIdPemilihan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tNamaPemilihan = new javax.swing.JTextField();
        bHapus = new javax.swing.JButton();
        bReset = new javax.swing.JButton();
        bEdit = new javax.swing.JButton();
        bSimpan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabDataPemilihan = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Data Pemilihan");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
        );

        jLabel2.setText("ID Pemilihan");

        tIdPemilihan.setEnabled(false);

        jLabel3.setText("Nama Pemilihan");

        bHapus.setText("HAPUS");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        bReset.setText("RESET");
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });

        bEdit.setText("EDIT");
        bEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditActionPerformed(evt);
            }
        });

        bSimpan.setText("SIMPAN");
        bSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanActionPerformed(evt);
            }
        });

        tabDataPemilihan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabDataPemilihan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabDataPemilihanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabDataPemilihan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tIdPemilihan, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tNamaPemilihan, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 71, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bSimpan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bHapus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bReset)
                .addGap(193, 193, 193))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tIdPemilihan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tNamaPemilihan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSimpan)
                    .addComponent(bEdit)
                    .addComponent(bHapus)
                    .addComponent(bReset))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanActionPerformed
//        String id_pemilihan = tIdPemilihan.getText();
        String nama_pemilihan = tNamaPemilihan.getText();
        
        if (nama_pemilihan.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Isi semua kolom data pemilihan terlebih dahulu!",
                    "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            // Panggil fungsi insertData() dari kelas Query untuk menyimpan data ke database
            String[] columns = {"id_pemilihan", "nama_pemilihan"};
            Object[] values = {0,nama_pemilihan};
            try {
                query.insertData(conn, "pemilihan", columns, values);
                JOptionPane.showMessageDialog(this, "Data pemilihan berhasil disimpan!",
                        "Informasi", JOptionPane.INFORMATION_MESSAGE);
                reset();
                datatable();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data pemilihan!",
                        "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_bSimpanActionPerformed

    private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed
        int selectedRow = tabDataPemilihan.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris data pemilihan yang ingin diedit!",
                    "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            String id_pemilihan = tIdPemilihan.getText();
            String nama_pemilihan = tNamaPemilihan.getText();
            
            if (id_pemilihan.isEmpty() || nama_pemilihan.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Isi semua kolom data pemilihan terlebih dahulu!",
                        "Peringatan", JOptionPane.WARNING_MESSAGE);
            } else {
                // Panggil fungsi updateData() dari kelas Query untuk mengedit data di database
                String[] columns = {"id_pemilihan", "nama_pemilihan"};
                Object[] values = {id_pemilihan, nama_pemilihan};
                String condition = "id_pemilihan = '" + id_pemilihan + "'";
                try {
                    query.updateData(conn, "pemilihan", columns, values, condition);
                    JOptionPane.showMessageDialog(this, "Data pemilihan berhasil diupdate!",
                            "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    reset();
                    datatable();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengupdate data pemilihan!",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_bEditActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        int selectedRow = tabDataPemilihan.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris data pemilihan yang ingin dihapus!",
                    "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            String id_pemilihan = tIdPemilihan.getText();
            int confirmDialog = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data pemilihan?",
                    "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
            if (confirmDialog == JOptionPane.YES_OPTION) {
                // Panggil fungsi deleteData() dari kelas Query untuk menghapus data di database
                String condition = "id_pemilihan = '" + id_pemilihan + "'";
                try {
                    query.deleteData(conn, "pemilihan", condition);
                    JOptionPane.showMessageDialog(this, "Data pemilihan berhasil dihapus!",
                            "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    reset();
                    datatable();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data pemilihan!",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_bHapusActionPerformed

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        reset();
    }//GEN-LAST:event_bResetActionPerformed

    private void tabDataPemilihanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabDataPemilihanMouseClicked
       int selectedRow = tabDataPemilihan.getSelectedRow();
        if (selectedRow != -1) {
             String id_pemilihan = tabDataPemilihan.getValueAt(selectedRow, 0).toString();
             String nama_pemilihan = tabDataPemilihan.getValueAt(selectedRow, 1).toString();
             setValueToTextField(id_pemilihan, nama_pemilihan);
        }
    }//GEN-LAST:event_tabDataPemilihanMouseClicked
    // Fungsi untuk memindahkan data dari baris yang terpilih ke JTextField
    private void setValueToTextField(String id_pemilihan, String nama_pemilihan) {
        tIdPemilihan.setText(id_pemilihan);
        tNamaPemilihan.setText(nama_pemilihan);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataPemilihan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataPemilihan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataPemilihan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataPemilihan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataPemilihan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEdit;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bReset;
    private javax.swing.JButton bSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tIdPemilihan;
    private javax.swing.JTextField tNamaPemilihan;
    private javax.swing.JTable tabDataPemilihan;
    // End of variables declaration//GEN-END:variables
}
