/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tampilan;

import helper.query;
import helper.reset;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author afgha
 */
public class DataPemilikToko extends javax.swing.JFrame {
    private DefaultTableModel tabmode;
    private final Connection conn = new helper.koneksi().getConnection();
    query query = new query();
    reset reset = new reset();
    
    void reset(){
        reset.resetTextFields(this.getContentPane());
    }
    
    void datatable() {
        Object[] baris = {"ID Pemilik Toko", "Nama Pemilik Toko", "Nama Produk", "No. Telp", "Alamat"};
        tabmode = new DefaultTableModel(null, baris);
        tabDataPemilikToko.setModel(tabmode);

        String sql = "SELECT id_pemilikToko, nama_pemilik_toko, nama_produk, no_telp, alamat FROM pemilik_toko;";
        try {
            Statement stat = conn.createStatement();
            ResultSet res = stat.executeQuery(sql);
            while (res.next()) {
                String id_pemilikToko = res.getString("id_pemilikToko");
                String nama_pemilik_toko = res.getString("nama_pemilik_toko");
                String nama_produk = res.getString("nama_produk");
                String no_telp = res.getString("no_telp");
                String alamat = res.getString("alamat");

                String[] data = {id_pemilikToko, nama_pemilik_toko, nama_produk, no_telp, alamat};
                tabmode.addRow(data);
            }
        } catch (SQLException ex) {
            System.out.println("Error: " + ex);
        }
        
    }
    /**
     * Creates new form DataPemilikToko
     */
    public DataPemilikToko() {
        initComponents();
        datatable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tNamaPemilikToko = new javax.swing.JTextField();
        tNamaProduk = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tNoTelp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tAlamat = new javax.swing.JTextField();
        bHapus = new javax.swing.JButton();
        bReset = new javax.swing.JButton();
        bEdit = new javax.swing.JButton();
        bSimpan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabDataPemilikToko = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Data Pemilik Toko");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
        );

        jLabel2.setText("ID");

        tId.setEnabled(false);

        jLabel3.setText("Nama Pemilik Toko");

        jLabel4.setText("Nama Produk");

        jLabel5.setText("No Telp");

        jLabel6.setText("Alamat");

        bHapus.setText("HAPUS");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        bReset.setText("RESET");
        bReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResetActionPerformed(evt);
            }
        });

        bEdit.setText("EDIT");
        bEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditActionPerformed(evt);
            }
        });

        bSimpan.setText("SIMPAN");
        bSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanActionPerformed(evt);
            }
        });

        tabDataPemilikToko.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabDataPemilikToko.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabDataPemilikTokoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabDataPemilikToko);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tNamaPemilikToko, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tNamaProduk, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bReset))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tNamaPemilikToko, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tNamaProduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tNoTelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSimpan)
                    .addComponent(bEdit)
                    .addComponent(bHapus)
                    .addComponent(bReset))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanActionPerformed
//        String id_pemilikToko = tId.getText();
        String nama_pemilik_toko = tNamaPemilikToko.getText();
        String nama_produk = tNamaProduk.getText();
        String no_telp = tNoTelp.getText();
        String alamat = tAlamat.getText();
        
        if (nama_pemilik_toko.isEmpty() || nama_produk.isEmpty() || no_telp.isEmpty() || alamat.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Isi semua kolom data pemilik toko terlebih dahulu!",
                    "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            // Panggil fungsi insertData() dari kelas Query untuk menyimpan data ke database
            String[] columns = {"id_pemilikToko", "nama_pemilik_toko", "nama_produk", "no_telp", "alamat"};
            Object[] values = {0, nama_pemilik_toko, nama_produk, no_telp, alamat};
            try {
                query.insertData(conn, "pemilik_toko", columns, values);
                JOptionPane.showMessageDialog(this, "Data pemilik toko berhasil disimpan!",
                        "Informasi", JOptionPane.INFORMATION_MESSAGE);
                reset();
                datatable();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data pemilik toko!",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_bSimpanActionPerformed

    private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed
       int selectedRow = tabDataPemilikToko.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris data pemilik toko yang ingin diedit!",
                    "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            String id_pemilikToko = tId.getText();
            String nama_pemilik_toko = tNamaPemilikToko.getText();
            String nama_produk = tNamaProduk.getText();
            String no_telp = tNoTelp.getText();
            String alamat = tAlamat.getText();
            
            if (id_pemilikToko.isEmpty() || nama_pemilik_toko.isEmpty() || nama_produk.isEmpty() || no_telp.isEmpty() || alamat.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Isi semua kolom data pemilik toko terlebih dahulu!",
                        "Peringatan", JOptionPane.WARNING_MESSAGE);
            } else {
                // Panggil fungsi updateData() dari kelas Query untuk mengedit data di database
                String[] columns = {"id_pemilikToko", "nama_pemilik_toko", "nama_produk", "no_telp", "alamat"};
                Object[] values = {id_pemilikToko, nama_pemilik_toko, nama_produk, no_telp, alamat};
                String condition = "id_pemilikToko = '" + id_pemilikToko + "'";
                try {
                    query.updateData(conn, "pemilik_toko", columns, values, condition);
                    JOptionPane.showMessageDialog(this, "Data pemilik toko berhasil diupdate!",
                            "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    reset();
                    datatable();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengupdate data pemilik toko!",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_bEditActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        int selectedRow = tabDataPemilikToko.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris data pemilik toko yang ingin dihapus!",
                    "Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            String id_pemilikToko = tId.getText();
            int confirmDialog = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data pemilik toko?",
                    "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
            if (confirmDialog == JOptionPane.YES_OPTION) {
                // Panggil fungsi deleteData() dari kelas Query untuk menghapus data di database
                String condition = "id_pemilikToko = '" + id_pemilikToko + "'";
                try {
                    query.deleteData(conn, "pemilik_toko", condition);
                    JOptionPane.showMessageDialog(this, "Data pemilik toko berhasil dihapus!",
                            "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    reset();
                    datatable();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data pemilik toko!",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_bHapusActionPerformed

    private void bResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResetActionPerformed
        reset();
    }//GEN-LAST:event_bResetActionPerformed

    private void tabDataPemilikTokoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabDataPemilikTokoMouseClicked
        int selectedRow = tabDataPemilikToko.getSelectedRow();
                if (selectedRow != -1) {
                    String id_pemilikToko = tabDataPemilikToko.getValueAt(selectedRow, 0).toString();
                    String nama_pemilik_toko = tabDataPemilikToko.getValueAt(selectedRow, 1).toString();
                    String nama_produk = tabDataPemilikToko.getValueAt(selectedRow, 2).toString();
                    String no_telp = tabDataPemilikToko.getValueAt(selectedRow, 3).toString();
                    String alamat = tabDataPemilikToko.getValueAt(selectedRow, 4).toString();
                    setValueToTextField(id_pemilikToko, nama_pemilik_toko, nama_produk, no_telp, alamat);
                }
    }//GEN-LAST:event_tabDataPemilikTokoMouseClicked
    // Fungsi untuk memindahkan data dari baris yang terpilih ke JTextField
    private void setValueToTextField(String id_pemilikToko, String nama_pemilik_toko, String nama_produk, String no_telp, String alamat) {
        tId.setText(id_pemilikToko);
        tNamaPemilikToko.setText(nama_pemilik_toko);
        tNamaProduk.setText(nama_produk);
        tNoTelp.setText(no_telp);
        tAlamat.setText(alamat);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataPemilikToko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataPemilikToko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataPemilikToko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataPemilikToko.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataPemilikToko().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEdit;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bReset;
    private javax.swing.JButton bSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tAlamat;
    private javax.swing.JTextField tId;
    private javax.swing.JTextField tNamaPemilikToko;
    private javax.swing.JTextField tNamaProduk;
    private javax.swing.JTextField tNoTelp;
    private javax.swing.JTable tabDataPemilikToko;
    // End of variables declaration//GEN-END:variables
}
